package Modelo;
// Generated 3 nov. 2021 10:47:30 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Campo generated by hbm2java
 */
@Entity
@Table(name="campo"
    ,schema="public"
)
public class Campo  implements java.io.Serializable {


     private int idcampo;
     private Estadocampo estadocampo;
     private Set<Lote> lotes = new HashSet<Lote>(0);

    public Campo() {
    }

	
    public Campo(Estadocampo estadocampo) {
        this.estadocampo = estadocampo;
    }
    public Campo(Estadocampo estadocampo, Set<Lote> lotes) {
       this.estadocampo = estadocampo;
       this.lotes = lotes;
    }
   
     @Id 

    
    @Column(name="idcampo", unique=true, nullable=false)
     @GeneratedValue(strategy=IDENTITY)
    public int getIdcampo() {
        return this.idcampo;
    }
    
    public void setIdcampo(int idcampo) {
        this.idcampo = idcampo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idestadocampo", nullable=false)
    public Estadocampo getEstadocampo() {
        return this.estadocampo;
    }
    
    public void setEstadocampo(Estadocampo estadocampo) {
        this.estadocampo = estadocampo;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="campo")
    public Set<Lote> getLotes() {
        return this.lotes;
    }
    
    public void setLotes(Set<Lote> lotes) {
        this.lotes = lotes;
    }
    
    public String verEstadoActualizado() {
        int sizeLote=0, sizeProyectos=0;
        for(Lote l: this.lotes) {
            for(Proyecto p: l.getProyectos()) {
                if(!(p.getEstadoproyecto().getNombre().equals("Cancelado"))&&!(p.getEstadoproyecto().getNombre().equals("Terminado")))
                sizeProyectos++;
            }
            sizeLote++;
        }
        String cadena = null;
        if(sizeLote==sizeProyectos) {
            cadena = "Completamente trabajado";
        } else {
            if(sizeProyectos>0) {
                cadena = "Parcialmente trabajado";
            } else {
                cadena = "En desuso";
            }
        }
        return cadena;
    }
}


