package Vistas;

import Controlador.Controlador;
import Modelo.*;
import java.util.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.*;

public class MenuCampo extends javax.swing.JFrame {

    private List<Campo> listCampos;
    private Controlador controlador;
    private ListSelectionModel tblListModel;
    private Campo campoSeleccionado;
    
    public MenuCampo(Controlador controlador) {
        initComponents();
        this.controlador = controlador;
        listCampos = new ArrayList<>();
        campoSeleccionado = null;
        tblListModel = tblCampos.getSelectionModel();
        tblListModel.addListSelectionListener(new ListSelectionListener () {
            @Override
            public void valueChanged(ListSelectionEvent evt) {
                tblListModelValueChanged(evt);
            }
        });
        iniciarTabla();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCampos = new javax.swing.JTable();
        lblNumero = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnVerLotes = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();
        lblAviso = new javax.swing.JLabel();
        btnBaja = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menú de Cultivo");

        tblCampos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCampos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblCampos);
        if (tblCampos.getColumnModel().getColumnCount() > 0) {
            tblCampos.getColumnModel().getColumn(0).setMaxWidth(75);
        }

        lblNumero.setText("Número:");

        txtNumero.setEditable(false);

        lblNombre.setText("Estado: ");

        txtNombre.setEditable(false);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnVerLotes.setText("Ver Lotes del Campo");
        btnVerLotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerLotesActionPerformed(evt);
            }
        });

        btnAtras.setText("Atrás");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        lblAviso.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnBaja.setText("Dar de Baja");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVerLotes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblNumero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre)
                            .addComponent(txtNumero)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblAviso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNumero)
                    .addComponent(lblNumero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombre)
                    .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnBorrar)
                    .addComponent(btnBaja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVerLotes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAtras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAviso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        dispose();
        MenuPrincipal menu = new MenuPrincipal(controlador);
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
            Estadocampo ec = controlador.getEstadosCampo().get(0);
            this.controlador.agregarObjeto(new Campo(ec));
            iniciarTabla();
            this.lblAviso.setText("Campo agregado.");
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        if ("Creado".equals(campoSeleccionado.getEstadocampo().getNombre())||"En desuso".equals(campoSeleccionado.getEstadocampo().getNombre())||"Final".equals(campoSeleccionado.getEstadocampo().getNombre()))
        {
            this.controlador.borrarObjeto(campoSeleccionado);
            iniciarTabla();
            this.lblAviso.setText("Campo borrado.");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No se puede borrar un Campo en el que se están realizando proyectos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnVerLotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerLotesActionPerformed
        this.setVisible(false);
        MenuLotes ml = new MenuLotes(controlador, campoSeleccionado);
        ml.setVisible(true);
    }//GEN-LAST:event_btnVerLotesActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        if ("Creado".equals(campoSeleccionado.getEstadocampo().getNombre())||"En desuso".equals(campoSeleccionado.getEstadocampo().getNombre()))
        {
            for(Estadocampo ec : controlador.getEstadosCampo())
            {
                if ("Final".equals(ec.getNombre()))
                {
                    campoSeleccionado.setEstadocampo(ec);                                        
                }
            }    
            controlador.actualizarObjeto(campoSeleccionado);
            iniciarTabla();
            this.lblAviso.setText("Campo dado de baja.");
        }
        else
        {
            if("Final".equals(campoSeleccionado.getEstadocampo().getNombre())){
                for(Estadocampo ec : controlador.getEstadosCampo())
                {
                    if ("En desuso".equals(ec.getNombre()))
                    {
                    campoSeleccionado.setEstadocampo(ec);                                        
                    }
                }    
                controlador.actualizarObjeto(campoSeleccionado);
                iniciarTabla();
                this.lblAviso.setText("Campo recuperado: estado en desuso.");
            }
            else
            {
                JOptionPane.showMessageDialog(this, "No se puede borrar un Campo en el que se están realizando proyectos.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnBajaActionPerformed

    private void iniciarTabla() {
        listCampos = controlador.getCampos();
        DefaultTableModel tblModel = (DefaultTableModel) tblCampos.getModel();
        tblModel.setRowCount(0);
        for(Campo c: listCampos) {
            String nroCampo = String.valueOf(c.getIdcampo());
            String nombreEstado = c.getEstadocampo().getNombre();
            String[] tblData = {nroCampo, nombreEstado};
            tblModel.addRow(tblData);
        }
        deseleccionarFila();
    }
    
    private void tblListModelValueChanged(ListSelectionEvent evt) {
        if(this.tblListModel.getSelectedItemsCount() > 0) {
            this.btnAgregar.setEnabled(false);
            this.btnBaja.setEnabled(true);
            this.btnBorrar.setEnabled(true);
            this.btnVerLotes.setEnabled(true);
            this.campoSeleccionado = this.listCampos.get(this.tblCampos.getSelectedRow());
            this.txtNumero.setText(String.valueOf(campoSeleccionado.getIdcampo()));
            this.txtNombre.setText(campoSeleccionado.getEstadocampo().getNombre());
        }
    }
    
    private void deseleccionarFila() {
        this.tblListModel.clearSelection();
        this.campoSeleccionado = null;
        this.txtNumero.setText("");
        this.txtNombre.setText("");
        this.btnAgregar.setEnabled(true);
        this.btnBaja.setEnabled(false);
        this.btnBorrar.setEnabled(false);
        this.btnVerLotes.setEnabled(false);        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBaja;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnVerLotes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAviso;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JTable tblCampos;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables
}
