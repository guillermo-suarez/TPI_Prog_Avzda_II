/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controlador.Controlador;
import Modelo.Lote;
import javax.swing.JOptionPane;

/**
 *
 * @author Garma
 */
public class MenuSepararLotes extends javax.swing.JFrame {
Lote lote;
Controlador controlador;
    /**
     * Creates new form MenuSepararLotes
     */
    public MenuSepararLotes(Controlador controlador, Lote lote) {
        this.controlador=controlador;
        this.lote=lote;
        initComponents();
        lblMetros.setText(String.valueOf(lote.getSuperficie()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMetros = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblMetros = new javax.swing.JLabel();
        btnSeparar = new javax.swing.JButton();
        btnTerminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Separar Lote");
        setResizable(false);

        jLabel1.setText("Metros del nuevo lote:");

        jLabel2.setText("Metros disponibles:");

        lblMetros.setText("jLabel3");

        btnSeparar.setText("Separar");
        btnSeparar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSepararActionPerformed(evt);
            }
        });

        btnTerminar.setText("Terminar");
        btnTerminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMetros))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMetros, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnTerminar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSeparar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblMetros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMetros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeparar)
                    .addComponent(btnTerminar))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTerminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerminarActionPerformed
        controlador.actualizarObjeto(lote);
        dispose();
        new MenuLotes(controlador,lote.getCampo()).setVisible(true);
    }//GEN-LAST:event_btnTerminarActionPerformed

    private void btnSepararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSepararActionPerformed
        if(txtMetros.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Ingrese la cantidad de metros a asignar al nuevo lote.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
           Float metros = Float.parseFloat(txtMetros.getText());
           if(metros<= lote.getSuperficie())
           {
               Lote separado = new Lote(lote.getCampo(),lote.getTiposuelo(),metros);
               lote.setSuperficie(lote.getSuperficie()-metros);
               if(lote.getSuperficie()==0)
               {
                   lote.setActivo(false);                         
               }               
               lote.getCampo().getLotes().add(separado);
               controlador.agregarObjeto(separado);                                       
               controlador.actualizarEstadoCampo(this.lote.getCampo());
               controlador.actualizarObjeto(lote);
               controlador.actualizarObjeto(lote.getCampo());             
               if(lote.isActivo()){
               iniciarTabla();
               JOptionPane.showMessageDialog(this, "Se ha creado un lote.", "Exito", JOptionPane.INFORMATION_MESSAGE);
               }
               else
               {
                  JOptionPane.showMessageDialog(this, "Ya se ha separado todo el lote.", "Terminado", JOptionPane.INFORMATION_MESSAGE); 
                  dispose();
                  new MenuLotes(controlador,lote.getCampo()).setVisible(true);
               }
               
           }
           else
           {
               JOptionPane.showMessageDialog(this, "Limite de metros excedido.", "Error", JOptionPane.ERROR_MESSAGE);
           }
        }
    }//GEN-LAST:event_btnSepararActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSeparar;
    private javax.swing.JButton btnTerminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblMetros;
    private javax.swing.JTextField txtMetros;
    // End of variables declaration//GEN-END:variables

    private void iniciarTabla() {
        lblMetros.setText(String.valueOf(lote.getSuperficie()));
        txtMetros.setText("");
    }
}
